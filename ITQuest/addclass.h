/**
 * @file addclass.h
 * @brief Contains the definition of the AddClass class.
 */

#ifndef ADDCLASS_H
#define ADDCLASS_H

#include <QDialog>
#include "global_vars.h"

namespace Ui {
class AddClass;
}

/**
 * @class AddClass
 * @brief Dialog window for adding a new class.
 *
 * This class provides a dialog window interface to add a new class.
 * It allows the user to input a class name and emits signals to add the class,
 * send data to the server, and update the main window.
 */
class AddClass : public QDialog
{
    Q_OBJECT

public:
    /**
     * @brief Constructor for AddClass.
     * @param parent The parent widget (optional).
     */
    explicit AddClass(QWidget *parent = nullptr);

    /**
     * @brief Destructor for AddClass.
     */
    ~AddClass();

signals:
    /**
     * @brief Signal emitted when a new class is to be added.
     * @param className The name of the new class.
     * @param classCode The code of the new class.
     */
    void add_class(QString className, int classCode);

    /**
     * @brief Signal emitted to send data to the server.
     * @param toServer The data to be sent to the server.
     */
    void sendToServer(QString toServer);

    /**
     * @brief Signal emitted to update the main window after adding a class.
     */
    void updateMainWindow();

private slots:
    /**
     * @brief Slot to handle click events on the Cancel button.
     *
     * Hides the dialog window when the Cancel button is clicked.
     */
    void on_pushButton_2_clicked();

    /**
     * @brief Slot to handle click events on the Add button.
     *
     * Retrieves the class name entered by the user, emits signals
     * to add the class, send data to the server, and update the main window,
     * and then closes the dialog window.
     */
    void on_pushButton_clicked();

private:
    Ui::AddClass *ui; /**< UI object pointer generated by Qt Designer. */
};

#endif // ADDCLASS_H
